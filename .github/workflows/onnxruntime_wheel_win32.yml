# This is a basic workflow to help you get started with Actions

name: 编译onnxruntime

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  check_run:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: windows-2016

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: 拉取本项目的源码
        uses: actions/checkout@master
        
      - name: 安装python
        uses: actions/setup-python@v2.1.4
        with:
          # Version range or exact version of a Python version to use, using SemVer's version range syntax.
          python-version: 3.6
          # The target architecture (x86, x64) of the Python interpreter.
          architecture: x86
       
      - name: 更新python模块
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install --upgrade wheel setuptools  
        
      - name: 下载onnxruntime源码
        run: git clone https://github.com/microsoft/onnxruntime.git
      
      - name: 编译
        run: |
          cd onnxruntime
          .\build.bat --config Release --x86 --build_wheel --parallel
            
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          # path的路径是以102757017/Cloud-compilation项目的根目录为工作目录，即使上一步使用cd 切换了路径也对根目录没有影响 
          path: '.\onnxruntime\build\Windows\Release\Release\dist'
          name: "dist" 

#      - name: 创建一个空的Release
#        id: create_release
#        uses: actions/create-release@v1.1.4
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: "wheel_win32"
#          release_name: onnxruntime
#          draft: false
#          prerelease: false

#      - name: 上传文件到上一步创建的release中
#        uses: actions/upload-release-asset@v1.0.2
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          # The URL for uploading assets to the release
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          # The path to the asset you want to upload
#          asset_path: '.\onnxruntime\build\Windows\Release\Release\dist\*.whl'

